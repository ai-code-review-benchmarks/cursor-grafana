// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v0alpha1

// FileActionApplyConfiguration represents a declarative configuration of the FileAction type for use
// with apply.
type FileActionApplyConfiguration struct {
	Action   *string `json:"action,omitempty"`
	Path     *string `json:"path,omitempty"`
	Ref      *string `json:"ref,omitempty"`
	Error    *string `json:"error,omitempty"`
	Group    *string `json:"group,omitempty"`
	Version  *string `json:"version,omitempty"`
	Resource *string `json:"resource,omitempty"`
	Name     *string `json:"name,omitempty"`
	Count    *int    `json:"count,omitempty"`
}

// FileActionApplyConfiguration constructs a declarative configuration of the FileAction type for use with
// apply.
func FileAction() *FileActionApplyConfiguration {
	return &FileActionApplyConfiguration{}
}

// WithAction sets the Action field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Action field is set to the value of the last call.
func (b *FileActionApplyConfiguration) WithAction(value string) *FileActionApplyConfiguration {
	b.Action = &value
	return b
}

// WithPath sets the Path field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Path field is set to the value of the last call.
func (b *FileActionApplyConfiguration) WithPath(value string) *FileActionApplyConfiguration {
	b.Path = &value
	return b
}

// WithRef sets the Ref field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Ref field is set to the value of the last call.
func (b *FileActionApplyConfiguration) WithRef(value string) *FileActionApplyConfiguration {
	b.Ref = &value
	return b
}

// WithError sets the Error field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Error field is set to the value of the last call.
func (b *FileActionApplyConfiguration) WithError(value string) *FileActionApplyConfiguration {
	b.Error = &value
	return b
}

// WithGroup sets the Group field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Group field is set to the value of the last call.
func (b *FileActionApplyConfiguration) WithGroup(value string) *FileActionApplyConfiguration {
	b.Group = &value
	return b
}

// WithVersion sets the Version field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Version field is set to the value of the last call.
func (b *FileActionApplyConfiguration) WithVersion(value string) *FileActionApplyConfiguration {
	b.Version = &value
	return b
}

// WithResource sets the Resource field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Resource field is set to the value of the last call.
func (b *FileActionApplyConfiguration) WithResource(value string) *FileActionApplyConfiguration {
	b.Resource = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *FileActionApplyConfiguration) WithName(value string) *FileActionApplyConfiguration {
	b.Name = &value
	return b
}

// WithCount sets the Count field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Count field is set to the value of the last call.
func (b *FileActionApplyConfiguration) WithCount(value int) *FileActionApplyConfiguration {
	b.Count = &value
	return b
}
